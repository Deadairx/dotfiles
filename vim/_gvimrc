" Sets: {{{
"set lines=50 columns=120 "Window Size
set guioptions+=c "Command like prompts (No GUI alerts)

set go-=m "remove menu bar
set go-=T "remove toolbar
set go-=r "remove right-hand scroll
set go-=L "remove left-hand scroll

"}}}
" Colorscheme: {{{
"colorscheme darkblue
"colorscheme solarized
colorscheme VisualStudioDark
let g:solarized_italic=0
"let g:lightline = { 'colorscheme': 'solarized',} "must come after theme options...no idea why...

if has('autocmd')
	" change colorscheme depending on current buffer
	" if desired, you may set a user-default colorscheme before this point,
	" otherwise we'll use the Vim default.
	" Variables used:
		" g:colors_name : current colorscheme at any moment
		" b:buffer_color (if any): colorscheme to be used for the current buffer
		" s:default_color : default colorscheme, to be used where b:buffer_color hasn't been set

	if has('user_commands')
		" User commands defined:
			" ColorScheme <name>
				" set the colorscheme for the current buffer
			" ColorDefault <name>
				" change the default colorscheme
		command -nargs=1 -bar ColorScheme
			\ colors <args>
			\ | let b:buffer_color = g:colors_name
			\ | call lightline#enable()
		command -nargs=1 -bar ColorDefault
			\ let s:default_color = <q-args>
			\ | if !exists('b:buffer_color')
				\ | colors <args>
			\ | endif
	endif
	if !exists('g:colors_name')
		let g:colors_name = 'default'
	endif
	let s:default_color = g:colors_name

	au BufEnter *.wiki ColorScheme gruvbox

	au BufEnter *
		\ let s:new_colors = (exists('b:buffer_color')?(b:buffer_color):(s:default_color))
		\ | if s:new_colors != g:colors_name
			\ | exe 'colors' s:new_colors
			\ | call lightline#enable()
		\ | endif

endif

"}}}
